---
title: "Setting up Renv"
subtitle: "Peers and Networks Workstream"
author:
  - name: Eleni Omiridou (PGR)
    email: 2333157O@student.gla.ac.uk
    affiliations: School of Health & Wellbeing 
date: 2024-09-24
date-format: long
format:
  html:
    code-links:
      - text: Back to Repository
        icon: github
        href: https://github.com/omiridoue/20240830_PaNs
      - text: Run Code in GitPod Session
        icon: globe
        href: https://gitpod.io/#github.com/omiridoue/20240830_PaNs
editor: visual
from: markdown+emoji
toc: TRUE
---

## Renv

To use renv we will need to install it as a package first. Documentation for renv: <https://rstudio.github.io/renv/>

```{r installrenv, include=FALSE}
install.packages("renv")
#install.packages("knitr") # you might need to download this package if you want to render the document on RStudio Cloud as it does not come pre-installed, otherwise you can opt run the code chunks one by one
```

If you working with a folder that has already set up an renv you can run the following command to install the packages and their versions which are described in the `renv.lock` file.

```{r restore_packages}
renv::restore()
```

Notice when you run `.libPaths()` this returns the path to your system path, where R is downloaded under your local programs folder. The second path will be to a new directory which is created every time you create an renv set-up.

```{r libpaths, eval= TRUE, include=TRUE}
.libPaths()
```

## Running Code

```{r read_networks, include=TRUE}
load('data/Glasgow-friendship.RData')
load('data/Glasgow-substances.RData')

# 3 - Read Data

friendships_t2 <- as.matrix(friendship.2)

friendships_t2[friendships_t2==1] <- 1
friendships_t2[friendships_t2==2] <- 1
friendships_t2[friendships_t2==10] <- 0

friendships_t2 <- replace(friendships_t2, is.na(friendships_t2), 0)

tobacco <- as.matrix(tobacco)

student_smoking_t2 <- c(tobacco[,2])
student_smoking_t2 <- replace(student_smoking_t2, is.na(student_smoking_t2), 0)
```

## Load packages installed in renv

We decided we need a couple more packages to work with. As you run these code chunks one by one, you will be prompted to answer a question in the terminal, this will ask you to confirm the installation to your `renv` to do this type the letter `y`.

```{r installpackage1, eval= TRUE, include=TRUE}
renv::install('reshape2')
```

```{r installpackage2, eval= TRUE, include=TRUE}
renv::install('dplyr')
```

```{r install_igraph, eval= TRUE, include=TRUE}
renv::install("igraph") #igraph causes a couple of issues so we need to install the above
```

If we want to be good about saving these to our default settings then we'll need to take a snapshot of the packages. To do this you will need to uncomment the first command in the following code chunk telling renv you'd like to take a snapshot of the current state of the packages you've installed. Remember we installed a couple of packages on top of the pre-specified ones in the lock file you received. If you are only testing around packages maybe it's best to not save these in a snapshot, otherwise your workspace will no longer be in sync.

```{r take_a_snapshot, eval= TRUE, include=TRUE}
renv::restore()
```

```{r prepare_data, echo=FALSE, message=FALSE, warning=FALSE, include=FALSE}

lapply(list('dplyr', 'reshape2', 'igraph'), library, character.only = TRUE)
source("code/00_prepare_data.R")
```

## Find packages installed in renv

To identify `find.package()`

```{r findpackage, eval= TRUE, include=TRUE}
find.package('igraph')
```

## Add further packages to the renv

```{r installpackage, eval= TRUE, include=TRUE}
renv::install('sigmajs')
```

## Friendship Network

Click anywhere on this pane to wake up the plot.

```{r graph1, eval=TRUE, echo=TRUE, message=FALSE, warning=FALSE, output=TRUE}
library(sigmajs)

sigmajs() |> 
      sg_from_igraph(g1) |>  
      sg_neighbours() |> 
      sg_settings(drawLabels = TRUE, 
                  hoverFontStyle = "bold", 
                  labelColor = "node", 
                  labelSizeRatio = 3,
                  defaultLabelHoverColor = "node",
                  mouseWheelEnabled = TRUE, 
                  drawEdgeLabels = FALSE,
                  labelThreshold= 100) |> 
      sg_drag_nodes() |>  
      sg_layout() |> 
      sg_noverlap()

```

## Now save changes to your Lock file

##### Uncomment this command if you'd like to save the changes you've made to your environment and send it off to your collaborator, so you're both on the same page :v:

```{r snapshot_settings, eval= TRUE, include=TRUE}
#renv::snapshot()
```
